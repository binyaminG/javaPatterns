//  פתרון נאיבי
public static boolean exist(char[][] arr, String word) {
    for (int i = 0; i < arr.length; i++) {
        for (int j = 0; j < arr[i].length; j++) {
            if (arr[i][j] == word.charAt(0)) {
                for (int k = 0; j+k < arr[i].length && k<word.length(); k++) {
                    if (arr[i][j+k] != word.charAt(k)) {
                        continue;
                    } else if (k==word.length()-1) {
                        return true;
                    }
                }
                for (int k = 0; k <= j && k<word.length(); k++) {
                    if (arr[i][j-k] != word.charAt(k)) {
                        continue;
                    } else if (k==word.length()-1) {
                        return true;
                    }
                }
                for (int k = 0; i+k < arr.length && k<word.length(); k++) {
                    if (arr[i+k][j] != word.charAt(k)) {
                        continue;
                    } else if (k==word.length()-1) {
                        return true;
                    }
                }
                for (int k = 0; k <= i && k<word.length(); k++) {
                    if (arr[i-k][j] != word.charAt(k)) {
                        continue;
                    } else if (k==word.length()-1) {
                        return true;
                    }
                }
            }
        }
    }
    return false;
}
//*****************************************************************************************************************
//  פתרון באמצעות שחלוף מטריצה
public static boolean exist(char[][] arr, String word) {
    String reversed = "";
    for (int i = word.length()-1; i > 0; i--) {
        reversed += word.charAt(i);
    }
    for (int i = 0; i < arr.length; i++) {
        String line = new String(arr[i]);
        if (line.contains(word)|| line.contains(reversed)) {
            return true;
        }
    }
    int numRows = arr.length;
    int numCols = arr[0].length;
    char[][] transposedArr = new char[numCols][numRows];

    for (int i = 0; i < numRows; i++) {
        for (int j = 0; j < numCols; j++) {
            transposedArr[j][i] = arr[i][j];
        }
    }
    for (int i = 0; i < transposedArr.length; i++) {
        String line = new String(transposedArr[i]);
        if (line.contains(word)|| line.contains(reversed)) {
            return true;
        }
    }
    return false;
}
